# as and at all active warps not yet processed

for (dimension in warp_config.dimensions) {
    
    var function_name = (resource) ("/dim_" + dimension.key.replace(":","_"))
    
    /${"execute in " + (dimension.key) + " run function " + (string) function_name}
    
    define function ${function_name} {
        
        if entity @e[tag=wp.processing,
            distance=0..]
        function {
            
            tag @e[type=$wp_pad] remove wp.tier_equal_or_less
            
            for (var i=warp_config.tiers.length-1; i>=0; i--) {
            
                var max_dist = warp_config.tiers[i].max_distance
                
                #   jank workaround for @e[component=${"tier_" + i}]
                tag @e[type=$wp_pad,tag=${"trident-component.warppad.tier_" + i}] add wp.tier_equal_or_less
                
                if entity @s[tag=wp.tier_equal_or_less]
                function {
                    
                    define function tag_valid {
                        tag @s add wp.valid_dest
                        data modify entity @e[tag=wp.processing,limit=1] data.ValidDests append from entity @s UUID[0]
                    }
                    
                    if (max_dist == -1) {
                        
                        as @e[
                            type=$wp_pad,
                            tag=wp.tier_equal_or_less,
                            tag=!wp.valid_dest,
                            tag=!wp.invalid_dest,
                            tag=!wp.processing
                        ]
                        function /tag_valid
                        
                    } else {
                        
                        as @e[
                            type=$wp_pad,
                            tag=wp.tier_equal_or_less,
                            tag=!wp.valid_dest,
                            tag=!wp.invalid_dest,
                            tag=!wp.processing
                        ]
                        if @s[
                            distance=..${max_dist / dimension.value}
                        ]
                        function /tag_valid
                    
                    }
                    
                }
            
            }
        
            as @e[
                type=$wp_pad,
                tag=!wp.valid_dest,
                tag=!wp.invalid_dest,
                tag=!wp.early_exclude,
                tag=!wp.processing
            ]
            function /tag_invalid {
                
                tag @s add wp.invalid_dest
                data modify entity @e[tag=wp.processing,limit=1] data.InvalidDests append from entity @s UUID[0]
                
            }
            
        }
    
    }

}
